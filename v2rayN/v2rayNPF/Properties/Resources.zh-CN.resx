<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivateServerMenu" xml:space="preserve">
    <value>激活服务器配置</value>
  </data>
  <data name="AddCustomMenu" xml:space="preserve">
    <value>添加自定义服务器配置...</value>
  </data>
  <data name="AddressHeader" xml:space="preserve">
    <value>地址</value>
  </data>
  <data name="AddServerAddress" xml:space="preserve">
    <value>地址 (address)</value>
  </data>
  <data name="AddServerAlias" xml:space="preserve">
    <value>显示名称 (remarks)</value>
  </data>
  <data name="AddServerAlterId" xml:space="preserve">
    <value>浮动 ID (alterID)</value>
  </data>
  <data name="AddServerEncryption" xml:space="preserve">
    <value>加密 (security)</value>
  </data>
  <data name="AddServerNetwork" xml:space="preserve">
    <value>网络 (network)</value>
  </data>
  <data name="AddServerPort" xml:space="preserve">
    <value>端口 (port)</value>
  </data>
  <data name="AddServerUrlMenu" xml:space="preserve">
    <value>从剪贴板导入 URL</value>
  </data>
  <data name="AddServerUserId" xml:space="preserve">
    <value>用户 ID (id)</value>
  </data>
  <data name="AddSSAddress" xml:space="preserve">
    <value>地址</value>
  </data>
  <data name="AddSSAlias" xml:space="preserve">
    <value>显示名称</value>
  </data>
  <data name="AddSSEncryption" xml:space="preserve">
    <value>加密</value>
  </data>
  <data name="AddSSMenu" xml:space="preserve">
    <value>添加 Shadowsocks 服务器...</value>
  </data>
  <data name="AddSSPassword" xml:space="preserve">
    <value>密码</value>
  </data>
  <data name="AddSSPort" xml:space="preserve">
    <value>端口</value>
  </data>
  <data name="AddVMessMenu" xml:space="preserve">
    <value>添加 VMess 服务器...</value>
  </data>
  <data name="AliasHeader" xml:space="preserve">
    <value>显示名称</value>
  </data>
  <data name="AppSettingsTab" xml:space="preserve">
    <value>V2RayNPF</value>
  </data>
  <data name="BasicSettingsTab" xml:space="preserve">
    <value>Core: 基本设置</value>
  </data>
  <data name="CancelBtn" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="CopyBtn" xml:space="preserve">
    <value>复制</value>
  </data>
  <data name="CopyPacMenu" xml:space="preserve">
    <value>复制本地 PAC 地址</value>
  </data>
  <data name="CopyServerMenu" xml:space="preserve">
    <value>复制服务器配置</value>
  </data>
  <data name="DisplaySharingInfo" xml:space="preserve">
    <value>显示共享信息</value>
  </data>
  <data name="EditCustomAliasWindow" xml:space="preserve">
    <value>更改显示名称</value>
  </data>
  <data name="EnableProxyMenu" xml:space="preserve">
    <value>启用系统代理</value>
  </data>
  <data name="EncryptionHeader" xml:space="preserve">
    <value>加密</value>
  </data>
  <data name="ExitMenu" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="ExportClientMenu" xml:space="preserve">
    <value>导出为客户端配置...</value>
  </data>
  <data name="ExportServerMenu" xml:space="preserve">
    <value>导出为服务器配置...</value>
  </data>
  <data name="ExportToClipMenu" xml:space="preserve">
    <value>导出全部至剪贴板</value>
  </data>
  <data name="GenerateGuidBtn" xml:space="preserve">
    <value>生成</value>
  </data>
  <data name="GlobalModeMenu" xml:space="preserve">
    <value>全局</value>
  </data>
  <data name="ImportClientMenu" xml:space="preserve">
    <value>导入客户端配置文件...</value>
  </data>
  <data name="ImportConfigMenu" xml:space="preserve">
    <value>导入配置文件</value>
  </data>
  <data name="ImportFromClipMenu" xml:space="preserve">
    <value>从剪贴板中导入</value>
  </data>
  <data name="ImportServerMenu" xml:space="preserve">
    <value>导入服务器配置文件...</value>
  </data>
  <data name="KcpSettingsTab" xml:space="preserve">
    <value>Core: KCP</value>
  </data>
  <data name="KeepCurrentModeMenu" xml:space="preserve">
    <value>保持当前模式</value>
  </data>
  <data name="MinimizeMainMenu" xml:space="preserve">
    <value>最小化</value>
  </data>
  <data name="MoveBottomMenu" xml:space="preserve">
    <value>移至底端</value>
  </data>
  <data name="MoveDownMenu" xml:space="preserve">
    <value>下移</value>
  </data>
  <data name="MoveTopMenu" xml:space="preserve">
    <value>移至顶端</value>
  </data>
  <data name="MoveUpMenu" xml:space="preserve">
    <value>上移</value>
  </data>
  <data name="OKBtn" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="PacModeMenu" xml:space="preserve">
    <value>PAC</value>
  </data>
  <data name="PortHeader" xml:space="preserve">
    <value>端口</value>
  </data>
  <data name="ProtocolHeader" xml:space="preserve">
    <value>协议</value>
  </data>
  <data name="ProxyModeMenu" xml:space="preserve">
    <value>系统代理模式</value>
  </data>
  <data name="RemoveServerMenu" xml:space="preserve">
    <value>删除服务器配置</value>
  </data>
  <data name="RestartMainMenu" xml:space="preserve">
    <value>重新启动</value>
  </data>
  <data name="RoutingSettingsTab" xml:space="preserve">
    <value>Core: 路由设置</value>
  </data>
  <data name="ServerListTrayMenu" xml:space="preserve">
    <value>服务器</value>
  </data>
  <data name="ServerMainMenu" xml:space="preserve">
    <value>服务器</value>
  </data>
  <data name="ServerTypeHeader" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="SettingsAllowLan" xml:space="preserve">
    <value>允许局域网连接</value>
  </data>
  <data name="SettingsBlockedRoutingTab" xml:space="preserve">
    <value>屏蔽</value>
  </data>
  <data name="SettingsBypassMainlandAddress" xml:space="preserve">
    <value>绕过中国大陆地址 (需要 Core v2.46+)</value>
  </data>
  <data name="SettingsBypassMainlandIp" xml:space="preserve">
    <value>绕过中国大陆 IP (需要 Core v2.46+)</value>
  </data>
  <data name="SettingsCustomDns" xml:space="preserve">
    <value>自定义 DNS (以逗号分隔)</value>
  </data>
  <data name="SettingsCustomGFWListAddress" xml:space="preserve">
    <value>自定义 GFWList 地址 (无需设置请留空)</value>
  </data>
  <data name="SettingsDirectRoutingTab" xml:space="preserve">
    <value>直连</value>
  </data>
  <data name="SettingsInbound1" xml:space="preserve">
    <value>本地监听端口 1</value>
  </data>
  <data name="SettingsInbound2" xml:space="preserve">
    <value>本地监听端口 2</value>
  </data>
  <data name="SettingsInboundProtocol" xml:space="preserve">
    <value>协议</value>
  </data>
  <data name="SettingsInboundUdp" xml:space="preserve">
    <value>启用 UDP</value>
  </data>
  <data name="SettingsLogging" xml:space="preserve">
    <value>启用本地日志 (默认: 禁用)</value>
  </data>
  <data name="SettingsLogLevel" xml:space="preserve">
    <value>日志级别</value>
  </data>
  <data name="SettingsMainMenu" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="SettingsMuxMultiplex" xml:space="preserve">
    <value>启用 Mux 多路复用 (默认: 启用)</value>
  </data>
  <data name="SettingsProxyRoutingTab" xml:space="preserve">
    <value>代理</value>
  </data>
  <data name="SettingsRoutingRulesLabel" xml:space="preserve">
    <value>自定义路由规则 (以逗号分隔):</value>
  </data>
  <data name="SettingsSyncTime" xml:space="preserve">
    <value>启动时同步系统时钟 (可能失败)</value>
  </data>
  <data name="SettingsSystemProxyHintLn1" xml:space="preserve">
    <value>* 启用系统代理:</value>
  </data>
  <data name="SettingsSystemProxyHintLn2" xml:space="preserve">
    <value>全局模式: 端口 = Socks 端口 + 1</value>
  </data>
  <data name="SettingsSystemProxyHintLn3" xml:space="preserve">
    <value>PAC 模式: Port = Socks 端口 + 2; 优先级: PAC &gt; V2Ray 路由规则</value>
  </data>
  <data name="SettingsSystemStartup" xml:space="preserve">
    <value>开机自动启动 (可能失败)</value>
  </data>
  <data name="SettingsWindow" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="ShadowsocksWindow" xml:space="preserve">
    <value>Shadowsocks 服务器</value>
  </data>
  <data name="VMessWindow" xml:space="preserve">
    <value>VMess 服务器</value>
  </data>
</root>